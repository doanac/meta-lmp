From 72372a60b8e594b0d39128c803471d0aa0a0a8f8 Mon Sep 17 00:00:00 2001
From: Andy Doan <andy@foundries.io>
Date: Thu, 3 Oct 2019 16:49:47 -0500
Subject: [PATCH 17/18] [fiotup] httpclient: Expose method to update headers

We have a custom client that needs to update HTTP headers after the
object has been instantiated. This shouldn't touch any current code
paths in aktualizr itself.

Signed-off-by: Andy Doan <andy@foundries.io>
---
 src/libaktualizr/http/httpclient.cc      | 16 ++++++++++++++++
 src/libaktualizr/http/httpclient.h       |  1 +
 src/libaktualizr/http/httpclient_test.cc | 12 ++++++++++++
 3 files changed, 29 insertions(+)

diff --git a/src/libaktualizr/http/httpclient.cc b/src/libaktualizr/http/httpclient.cc
index 916eb9de..f88f912f 100644
--- a/src/libaktualizr/http/httpclient.cc
+++ b/src/libaktualizr/http/httpclient.cc
@@ -257,4 +257,20 @@ std::future<HttpResponse> HttpClient::downloadAsync(const std::string& url, curl
   return resp_future;
 }
 
+bool HttpClient::updateHeader(const std::string& name, const std::string& value) {
+  curl_slist* item = headers;
+  std::string lookfor(name + ": ");
+
+  while (item != nullptr) {
+    if (strncmp(lookfor.c_str(), item->data, lookfor.length()) == 0) {
+      free(item->data);
+      lookfor += value;
+      item->data = strdup(lookfor.c_str());
+      return true;
+    }
+    item = item->next;
+  }
+  return false;
+}
+
 // vim: set tabstop=2 shiftwidth=2 expandtab:
diff --git a/src/libaktualizr/http/httpclient.h b/src/libaktualizr/http/httpclient.h
index 3d8470e8..a7605207 100644
--- a/src/libaktualizr/http/httpclient.h
+++ b/src/libaktualizr/http/httpclient.h
@@ -41,6 +41,7 @@ class HttpClient : public HttpInterface {
                                           CurlHandler *easyp) override;
   void setCerts(const std::string &ca, CryptoSource ca_source, const std::string &cert, CryptoSource cert_source,
                 const std::string &pkey, CryptoSource pkey_source) override;
+  bool updateHeader(const std::string &name, const std::string &value);
 
  private:
   FRIEND_TEST(GetTest, download_speed_limit);
diff --git a/src/libaktualizr/http/httpclient_test.cc b/src/libaktualizr/http/httpclient_test.cc
index 46a2b423..9668574f 100644
--- a/src/libaktualizr/http/httpclient_test.cc
+++ b/src/libaktualizr/http/httpclient_test.cc
@@ -100,6 +100,18 @@ TEST(HttpClient, user_agent) {
   }
 }
 
+TEST(Headers, update_header) {
+  std::vector<std::string> headers = {"Authorization: Bearer bad"};
+  HttpClient http(&headers);
+
+  ASSERT_FALSE(http.updateHeader("NOSUCHHEADER", "foo"));
+
+  ASSERT_TRUE(http.updateHeader("Authorization", "Bearer token"));
+  std::string path = "/auth_call";
+  Json::Value response = http.get(server + path, HttpInterface::kNoLimit).getJson();
+  EXPECT_EQ(response["status"].asString(), "good");
+}
+
 // TODO: add tests for HttpClient::download
 
 #ifndef __NO_MAIN__
-- 
2.23.0


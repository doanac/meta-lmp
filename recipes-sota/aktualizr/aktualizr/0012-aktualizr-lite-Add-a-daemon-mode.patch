From c93382a13f8c2247f2ac47145db05c925b397f45 Mon Sep 17 00:00:00 2001
From: Andy Doan <andy@foundries.io>
Date: Tue, 2 Jul 2019 00:06:35 -0500
Subject: [PATCH 12/18] aktualizr-lite: Add a daemon mode

Signed-off-by: Andy Doan <andy@foundries.io>
---
 src/aktualizr_lite/main.cc | 42 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 42 insertions(+)

diff --git a/src/aktualizr_lite/main.cc b/src/aktualizr_lite/main.cc
index ca5c87a5..1d410d97 100644
--- a/src/aktualizr_lite/main.cc
+++ b/src/aktualizr_lite/main.cc
@@ -11,6 +11,13 @@
 
 namespace bpo = boost::program_options;
 
+#ifdef BUILD_DOCKERAPP
+#define should_compare_docker_apps(config) \
+  (config.pacman.type == PackageManager::kOstreeDockerApp && !config.pacman.docker_apps.empty())
+#else
+#define should_compare_docker_apps(config) (false)
+#endif
+
 static void log_info_target(const std::string &prefix, const Config &config, const Uptane::Target &t) {
   auto name = t.filename();
   if (t.custom_version().length() > 0) {
@@ -155,6 +162,39 @@ static int update_main(LiteClient &client, const bpo::variables_map &variables_m
   return do_update(client, *target);
 }
 
+static int daemon_main(LiteClient &client, const bpo::variables_map &variables_map) {
+  if (client.config.uptane.repo_server.empty()) {
+    LOG_ERROR << "[uptane]/repo_server is not configured";
+    return 1;
+  }
+  bool compareDockerApps = should_compare_docker_apps(client.config);
+  Uptane::HardwareIdentifier hwid(client.config.provision.primary_ecu_hardware_id);
+
+  auto current = client.primary->getCurrent();
+  LOG_INFO << "Active image is: " << current;
+
+  unsigned int interval = 300;
+  if (variables_map.count("interval") > 0) {
+    interval = variables_map["interval"].as<unsigned int>();
+  }
+
+  while (true) {
+    LOG_INFO << "Refreshing target metadata";
+    if (!client.primary->updateImagesMeta()) {
+      LOG_WARNING << "Unable to update latest metadata, using local copy";
+    }
+    auto target = find_target(client.primary, hwid, client.config.pacman.tags, "latest");
+    if (target != nullptr && !targets_eq(*target, current, compareDockerApps)) {
+      LOG_INFO << "Updating base image to: " << *target;
+      if (do_update(client, *target) == 0) {
+        // TODO reboot
+      }
+    }
+    sleep(interval);
+  }
+  return 0;
+}
+
 struct SubCommand {
   const char *name;
   int (*main)(LiteClient &, const bpo::variables_map &);
@@ -163,6 +203,7 @@ static SubCommand commands[] = {
     {"status", status_main},
     {"list", list_main},
     {"update", update_main},
+    {"daemon", daemon_main},
 };
 
 void check_info_options(const bpo::options_description &description, const bpo::variables_map &vm) {
@@ -197,6 +238,7 @@ bpo::variables_map parse_options(int argc, char *argv[]) {
       ("ostree-server", bpo::value<std::string>(), "url of the ostree repository")
       ("primary-ecu-hardware-id", bpo::value<std::string>(), "hardware ID of primary ecu")
       ("update-name", bpo::value<std::string>(), "optional name of the update when running \"update\". default=latest")
+      ("interval", bpo::value<unsigned int>(), "optional interval in seconds to poll for update when in daemon mode. default=300")
       ("command", bpo::value<std::string>(), subs.c_str());
   // clang-format on
 
-- 
2.23.0

